/**
 * @file src/cpdetect/signatures/yara/database/x86/pe/packer/packer_06.cpp
 * @brief Database of signatures.
 * @copyright (c) 2017 Avast Software, licensed under the MIT license
 */

const char *x86PePacker_06 =
R"x86_pe_packer(
rule rule_151_AHTeam_EP_Protector {
	meta:
		tool = "P"
		name = "AHTeam EP Protector"
		version = "0.3-0.41"
		pattern = "90????????????????????????????????????????????????????????????????????????????????????????????90FFE0"
	strings:
		$1 = { 90 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 90 FF E0 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_152_AI1_Creator {
	meta:
		tool = "P"
		name = "AI1 Creator"
		version = "1 beta 2"
		pattern = "E8FEFDFFFF6A00E80D000000CCFF2578104000FF257C104000FF2580104000FF2584104000FF2588104000FF258C104000FF2590104000FF2594104000FF2598104000FF259C104000FF25A0104000FF25A4104000FF25AC104000"
	strings:
		$1 = { E8 FE FD FF FF 6A 00 E8 0D 00 00 00 CC FF 25 78 10 40 00 FF 25 7C 10 40 00 FF 25 80 10 40 00 FF 25 84 10 40 00 FF 25 88 10 40 00 FF 25 8C 10 40 00 FF 25 90 10 40 00 FF 25 94 10 40 00 FF 25 98 10 40 00 FF 25 9C 10 40 00 FF 25 A0 10 40 00 FF 25 A4 10 40 00 FF 25 AC 10 40 00 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_153_AINEXE {
	meta:
		tool = "P"
		name = "AINEXE"
		version = "2.1"
		pattern = "A1????2D????8ED0BC????8CD836A3????05????36A3????2EA1????8AD4B104D2EAFEC9"
	strings:
		$1 = { A1 ?? ?? 2D ?? ?? 8E D0 BC ?? ?? 8C D8 36 A3 ?? ?? 05 ?? ?? 36 A3 ?? ?? 2E A1 ?? ?? 8A D4 B1 04 D2 EA FE C9 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_154_AINEXE {
	meta:
		tool = "P"
		name = "AINEXE"
		version = "2.30"
		pattern = "0E07B9????BE????33FFFCF3A4A1????2D????8ED0BC????8CD8"
	strings:
		$1 = { 0E 07 B9 ?? ?? BE ?? ?? 33 FF FC F3 A4 A1 ?? ?? 2D ?? ?? 8E D0 BC ?? ?? 8C D8 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_155_Alex_Protector {
	meta:
		tool = "P"
		name = "Alex Protector"
		version = "0.4 beta 1"
		pattern = "60E801000000C783C40433C9E8010000006883C404E8010000006883C404B9??000000E8010000006883C404E800000000E801000000C783C4048B2C2483C404E801000000A983C40481ED3C134000E8010000006883C404E800000000E80000000049E8010000006883C40485C975DFE8B9020000E801000000C783C4048D9563144000E801000000C783C404909090E8CA01000001020304056890608B7424248B7C2428FCB2"
	strings:
		$1 = { 60 E8 01 00 00 00 C7 83 C4 04 33 C9 E8 01 00 00 00 68 83 C4 04 E8 01 00 00 00 68 83 C4 04 B9 ?? 00 00 00 E8 01 00 00 00 68 83 C4 04 E8 00 00 00 00 E8 01 00 00 00 C7 83 C4 04 8B 2C 24 83 C4 04 E8 01 00 00 00 A9 83 C4 04 81 ED 3C 13 40 00 E8 01 00 00 00 68 83 C4 04 E8 00 00 00 00 E8 00 00 00 00 49 E8 01 00 00 00 68 83 C4 04 85 C9 75 DF E8 B9 02 00 00 E8 01 00 00 00 C7 83 C4 04 8D 95 63 14 40 00 E8 01 00 00 00 C7 83 C4 04 90 90 90 E8 CA 01 00 00 01 02 03 04 05 68 90 60 8B 74 24 24 8B 7C 24 28 FC B2 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_156_Alex_Protector {
	meta:
		tool = "P"
		name = "Alex Protector"
		version = "1.0 beta 2"
		pattern = "60E8000000005D81ED06104000E824000000EB01E98B44240CEB03EB03C7EBFBE801000000A883C4048380B80000000233C0EB01E9C35883C404EB03EB03C7EBFBE801000000A883C4045064FF350000000064892500000000EB01E9FFFF60EB03EB03C7EBFBE801000000A883C4040F318BD8EB03EB03C7EBFBE801000000A883C4048BCAEB03EB03C7EBFBE801000000A883C4040F312BC3EB03EB03C7EBFBE801000000A883"
	strings:
		$1 = { 60 E8 00 00 00 00 5D 81 ED 06 10 40 00 E8 24 00 00 00 EB 01 E9 8B 44 24 0C EB 03 EB 03 C7 EB FB E8 01 00 00 00 A8 83 C4 04 83 80 B8 00 00 00 02 33 C0 EB 01 E9 C3 58 83 C4 04 EB 03 EB 03 C7 EB FB E8 01 00 00 00 A8 83 C4 04 50 64 FF 35 00 00 00 00 64 89 25 00 00 00 00 EB 01 E9 FF FF 60 EB 03 EB 03 C7 EB FB E8 01 00 00 00 A8 83 C4 04 0F 31 8B D8 EB 03 EB 03 C7 EB FB E8 01 00 00 00 A8 83 C4 04 8B CA EB 03 EB 03 C7 EB FB E8 01 00 00 00 A8 83 C4 04 0F 31 2B C3 EB 03 EB 03 C7 EB FB E8 01 00 00 00 A8 83 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_157_Alex_Protector {
	meta:
		tool = "P"
		name = "Alex Protector"
		version = "1.0"
		pattern = "60E8000000005D81ED06104000E824000000EB01E98B"
	strings:
		$1 = { 60 E8 00 00 00 00 5D 81 ED 06 10 40 00 E8 24 00 00 00 EB 01 E9 8B }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_158_Alloy {
	meta:
		tool = "P"
		name = "Alloy"
		version = "1.x.2000"
		pattern = "9C60E802??????33C08BC483C004938BE38B5BFC81EB072040??87DD6A0468??10????68??02????6A??FF95462340??0B"
	strings:
		$1 = { 9C 60 E8 02 ?? ?? ?? 33 C0 8B C4 83 C0 04 93 8B E3 8B 5B FC 81 EB 07 20 40 ?? 87 DD 6A 04 68 ?? 10 ?? ?? 68 ?? 02 ?? ?? 6A ?? FF 95 46 23 40 ?? 0B }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_159_Alloy {
	meta:
		tool = "P"
		name = "Alloy"
		version = "4.x"
		pattern = "9C60E80200000033C08BC483C004938BE38B5BFC81EB0730400087DD6A04680010000068000200006A00FF95A83340000BC00F84F601000089852E33400083BDE832400001740D83BDE432400001742A8BF8EB3E68D801000050FF95CC334000508D852833400050FFB52E334000FF95D03340005883C005EB0C68D801000050FF95C03340008BBD2E33400003F8C6075C478DB500334000AC0AC07403AAEBF883BDDC32400001"
	strings:
		$1 = { 9C 60 E8 02 00 00 00 33 C0 8B C4 83 C0 04 93 8B E3 8B 5B FC 81 EB 07 30 40 00 87 DD 6A 04 68 00 10 00 00 68 00 02 00 00 6A 00 FF 95 A8 33 40 00 0B C0 0F 84 F6 01 00 00 89 85 2E 33 40 00 83 BD E8 32 40 00 01 74 0D 83 BD E4 32 40 00 01 74 2A 8B F8 EB 3E 68 D8 01 00 00 50 FF 95 CC 33 40 00 50 8D 85 28 33 40 00 50 FF B5 2E 33 40 00 FF 95 D0 33 40 00 58 83 C0 05 EB 0C 68 D8 01 00 00 50 FF 95 C0 33 40 00 8B BD 2E 33 40 00 03 F8 C6 07 5C 47 8D B5 00 33 40 00 AC 0A C0 74 03 AA EB F8 83 BD DC 32 40 00 01 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_160_Aluwain {
	meta:
		tool = "P"
		name = "Aluwain"
		version = "8.09"
		pattern = "8BEC1EE8????9D5E"
	strings:
		$1 = { 8B EC 1E E8 ?? ?? 9D 5E }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_161_ANDpakk {
	meta:
		tool = "P"
		name = "ANDpakk"
		version = "2.0.06"
		pattern = "60FCBE????????BF????????5783CDFF33C9F9EB05A402DB75058A1E4612DB72F433C04002DB75058A1E4612DB13C002DB75058A1E4612DB720E4802DB75058A1E4612DB13C0EBDC83E803720FC1E008AC83F0FF744DD1F88BE8EB0902DB75058A1E4612DB13C902DB75058A1E4612DB13C9751A4102DB75058A1E4612DB13C902DB75058A1E4612DB73EA83C10281FD????????83D101568D342FF3A45EE973FFFFFFC3"
	strings:
		$1 = { 60 FC BE ?? ?? ?? ?? BF ?? ?? ?? ?? 57 83 CD FF 33 C9 F9 EB 05 A4 02 DB 75 05 8A 1E 46 12 DB 72 F4 33 C0 40 02 DB 75 05 8A 1E 46 12 DB 13 C0 02 DB 75 05 8A 1E 46 12 DB 72 0E 48 02 DB 75 05 8A 1E 46 12 DB 13 C0 EB DC 83 E8 03 72 0F C1 E0 08 AC 83 F0 FF 74 4D D1 F8 8B E8 EB 09 02 DB 75 05 8A 1E 46 12 DB 13 C9 02 DB 75 05 8A 1E 46 12 DB 13 C9 75 1A 41 02 DB 75 05 8A 1E 46 12 DB 13 C9 02 DB 75 05 8A 1E 46 12 DB 73 EA 83 C1 02 81 FD ?? ?? ?? ?? 83 D1 01 56 8D 34 2F F3 A4 5E E9 73 FF FF FF C3 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_162_ANDpakk {
	meta:
		tool = "P"
		name = "ANDpakk"
		version = "2.0.18"
		pattern = "FCBE????????BF????????5783CDFF33C9F9EB05A402DB75058A1E4612DB72F433C04002DB75058A1E4612DB13C002DB75058A1E4612DB720E4802DB75058A1E4612DB13C0EBDC83E803720FC1E008AC83F0FF744DD1F88BE8EB0902DB75058A1E4612DB13C902DB75058A1E4612DB13C9751A4102DB75058A1E4612DB13C902DB75058A1E4612DB73EA83C10281FD????????83D101568D342FF3A45EE973FFFFFFC3"
	strings:
		$1 = { FC BE ?? ?? ?? ?? BF ?? ?? ?? ?? 57 83 CD FF 33 C9 F9 EB 05 A4 02 DB 75 05 8A 1E 46 12 DB 72 F4 33 C0 40 02 DB 75 05 8A 1E 46 12 DB 13 C0 02 DB 75 05 8A 1E 46 12 DB 72 0E 48 02 DB 75 05 8A 1E 46 12 DB 13 C0 EB DC 83 E8 03 72 0F C1 E0 08 AC 83 F0 FF 74 4D D1 F8 8B E8 EB 09 02 DB 75 05 8A 1E 46 12 DB 13 C9 02 DB 75 05 8A 1E 46 12 DB 13 C9 75 1A 41 02 DB 75 05 8A 1E 46 12 DB 13 C9 02 DB 75 05 8A 1E 46 12 DB 73 EA 83 C1 02 81 FD ?? ?? ?? ?? 83 D1 01 56 8D 34 2F F3 A4 5E E9 73 FF FF FF C3 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_163_Anskya_Binder {
	meta:
		tool = "P"
		name = "Anskya Binder"
		version = "1.1"
		pattern = "BE??????00BBF811400033ED83EE04392E7411"
	strings:
		$1 = { BE ?? ?? ?? 00 BB F8 11 40 00 33 ED 83 EE 04 39 2E 74 11 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_164_Anskya_NTPacker_Generator {
	meta:
		tool = "P"
		name = "Anskya NTPacker Generator"
		pattern = "558BEC83C4F053B8881D0010E8C7FAFFFF6A0A68201E0010A11431001050E871FBFFFF8BD885DB742F53A11431001050E897FBFFFF85C0741F53A11431001050E85FFBFFFF85C0740F50E85DFBFFFF85C07405E870FCFFFF5BE8F2F6FFFF00004845415254"
	strings:
		$1 = { 55 8B EC 83 C4 F0 53 B8 88 1D 00 10 E8 C7 FA FF FF 6A 0A 68 20 1E 00 10 A1 14 31 00 10 50 E8 71 FB FF FF 8B D8 85 DB 74 2F 53 A1 14 31 00 10 50 E8 97 FB FF FF 85 C0 74 1F 53 A1 14 31 00 10 50 E8 5F FB FF FF 85 C0 74 0F 50 E8 5D FB FF FF 85 C0 74 05 E8 70 FC FF FF 5B E8 F2 F6 FF FF 00 00 48 45 41 52 54 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_165_Anslym_FUD_Crypter {
	meta:
		tool = "P"
		name = "Anslym FUD Crypter"
		pattern = "558BEC83C4F05356B838170510E85A45FBFF33C05568211C051064FF30648920EB08FCFCFCFCFCFC2754E8854CFBFF6A00E80E47FBFF6A0AE82749FBFFE8EA47FBFF6A0A"
	strings:
		$1 = { 55 8B EC 83 C4 F0 53 56 B8 38 17 05 10 E8 5A 45 FB FF 33 C0 55 68 21 1C 05 10 64 FF 30 64 89 20 EB 08 FC FC FC FC FC FC 27 54 E8 85 4C FB FF 6A 00 E8 0E 47 FB FF 6A 0A E8 27 49 FB FF E8 EA 47 FB FF 6A 0A }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_166_Anti007 {
	meta:
		tool = "P"
		name = "Anti007"
		extra = "NsPacK Private"
		pattern = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000????????????????????????0010000000000000????????000000000000000000000000600000E0????????????????????????????????????????????????000000000000000000000000600000E0????????????????????????????????00000000????????000000000000000000000000600000E0"
	strings:
		$1 = { 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 10 00 00 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 00 00 00 00 00 00 00 00 60 00 00 E0 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 00 00 00 00 00 00 00 00 60 00 00 E0 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 00 00 00 00 00 00 00 00 60 00 00 E0 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_167_Anti007 {
	meta:
		tool = "P"
		name = "Anti007"
		version = "1.0 - 2.x"
		extra = "NsPacK Private"
		pattern = "0000004C6F61644C6962726172794100000047657450726F63416464726573730000005669727475616C50726F746563740000005669727475616C416C6C6F630000005669727475616C467265650000004578697450726F63657373000000"
	strings:
		$1 = { 00 00 00 4C 6F 61 64 4C 69 62 72 61 72 79 41 00 00 00 47 65 74 50 72 6F 63 41 64 64 72 65 73 73 00 00 00 56 69 72 74 75 61 6C 50 72 6F 74 65 63 74 00 00 00 56 69 72 74 75 61 6C 41 6C 6C 6F 63 00 00 00 56 69 72 74 75 61 6C 46 72 65 65 00 00 00 45 78 69 74 50 72 6F 63 65 73 73 00 00 00 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_168_Anti007 {
	meta:
		tool = "P"
		name = "Anti007"
		version = "2.6"
		pattern = "0000004C6F61644C6962726172794100000047657450726F63416464726573730000005669727475616C50726F746563740000005669727475616C416C6C6F630000005669727475616C4672656500000047657453797374656D4469726563746F72794100000043726561746546696C6541000000577269746546696C65000000436C6F736548616E646C650000004578697450726F636573730000"
	strings:
		$1 = { 00 00 00 4C 6F 61 64 4C 69 62 72 61 72 79 41 00 00 00 47 65 74 50 72 6F 63 41 64 64 72 65 73 73 00 00 00 56 69 72 74 75 61 6C 50 72 6F 74 65 63 74 00 00 00 56 69 72 74 75 61 6C 41 6C 6C 6F 63 00 00 00 56 69 72 74 75 61 6C 46 72 65 65 00 00 00 47 65 74 53 79 73 74 65 6D 44 69 72 65 63 74 6F 72 79 41 00 00 00 43 72 65 61 74 65 46 69 6C 65 41 00 00 00 57 72 69 74 65 46 69 6C 65 00 00 00 43 6C 6F 73 65 48 61 6E 64 6C 65 00 00 00 45 78 69 74 50 72 6F 63 65 73 73 00 00 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_169_Anti007 {
	meta:
		tool = "P"
		name = "Anti007"
		version = "2.7 - 3.5"
		pattern = "0000004C6F61644C6962726172794100000047657450726F63416464726573730000005669727475616C50726F746563740000005669727475616C416C6C6F630000005669727475616C4672656500000047657454656D70506174684100000043726561746546696C6541000000577269746546696C65000000436C6F736548616E646C650000004578697450726F63657373000000"
	strings:
		$1 = { 00 00 00 4C 6F 61 64 4C 69 62 72 61 72 79 41 00 00 00 47 65 74 50 72 6F 63 41 64 64 72 65 73 73 00 00 00 56 69 72 74 75 61 6C 50 72 6F 74 65 63 74 00 00 00 56 69 72 74 75 61 6C 41 6C 6C 6F 63 00 00 00 56 69 72 74 75 61 6C 46 72 65 65 00 00 00 47 65 74 54 65 6D 70 50 61 74 68 41 00 00 00 43 72 65 61 74 65 46 69 6C 65 41 00 00 00 57 72 69 74 65 46 69 6C 65 00 00 00 43 6C 6F 73 65 48 61 6E 64 6C 65 00 00 00 45 78 69 74 50 72 6F 63 65 73 73 00 00 00 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_170_AntiDote {
	meta:
		tool = "P"
		name = "AntiDote"
		version = "1.0 - 1.4"
		pattern = "000000000901476574436F6D6D616E644C696E654100DB0147657456657273696F6E4578410073014765744D6F64756C6546696C654E616D654100007A0357616974466F7253696E676C654F626A65637400BF02526573756D6554687265616400002903536574546872656164436F6E7465787400009403577269746550726F636573734D656D6F727900006B035669727475616C416C6C6F6345780000A6025265616450726F636573734D656D6F727900CA01476574546872656164436F6E746578740000620043726561746550726F636573734100004B45524E454C33322E646C6C"
	strings:
		$1 = { 00 00 00 00 09 01 47 65 74 43 6F 6D 6D 61 6E 64 4C 69 6E 65 41 00 DB 01 47 65 74 56 65 72 73 69 6F 6E 45 78 41 00 73 01 47 65 74 4D 6F 64 75 6C 65 46 69 6C 65 4E 61 6D 65 41 00 00 7A 03 57 61 69 74 46 6F 72 53 69 6E 67 6C 65 4F 62 6A 65 63 74 00 BF 02 52 65 73 75 6D 65 54 68 72 65 61 64 00 00 29 03 53 65 74 54 68 72 65 61 64 43 6F 6E 74 65 78 74 00 00 94 03 57 72 69 74 65 50 72 6F 63 65 73 73 4D 65 6D 6F 72 79 00 00 6B 03 56 69 72 74 75 61 6C 41 6C 6C 6F 63 45 78 00 00 A6 02 52 65 61 64 50 72 6F 63 65 73 73 4D 65 6D 6F 72 79 00 CA 01 47 65 74 54 68 72 65 61 64 43 6F 6E 74 65 78 74 00 00 62 00 43 72 65 61 74 65 50 72 6F 63 65 73 73 41 00 00 4B 45 52 4E 45 4C 33 32 2E 64 6C 6C }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_171_AntiDote {
	meta:
		tool = "P"
		name = "AntiDote"
		version = "1.0b"
		pattern = "E8BBFFFFFF84C0742F680401000068C02360006A00FF1508106000E840FFFFFF506878116000686811600068C0236000E8ABFDFFFF83C41033C0C210009090908B4C2408568B74240833D28BC6F7F18BC685D2740833D2F7F1400FAFC15EC3908B4424045355568B483C5703C833D28B79548B71388BC7F7F685D2740C8BC733D2F7F68BF8470FAFFE33C033DB668B41148D54081833C0668B4106895424148D68FF85ED7C3733C0"
	strings:
		$1 = { E8 BB FF FF FF 84 C0 74 2F 68 04 01 00 00 68 C0 23 60 00 6A 00 FF 15 08 10 60 00 E8 40 FF FF FF 50 68 78 11 60 00 68 68 11 60 00 68 C0 23 60 00 E8 AB FD FF FF 83 C4 10 33 C0 C2 10 00 90 90 90 8B 4C 24 08 56 8B 74 24 08 33 D2 8B C6 F7 F1 8B C6 85 D2 74 08 33 D2 F7 F1 40 0F AF C1 5E C3 90 8B 44 24 04 53 55 56 8B 48 3C 57 03 C8 33 D2 8B 79 54 8B 71 38 8B C7 F7 F6 85 D2 74 0C 8B C7 33 D2 F7 F6 8B F8 47 0F AF FE 33 C0 33 DB 66 8B 41 14 8D 54 08 18 33 C0 66 8B 41 06 89 54 24 14 8D 68 FF 85 ED 7C 37 33 C0 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_172_AntiDote {
	meta:
		tool = "P"
		name = "AntiDote"
		version = "1.2b demo"
		pattern = "6869D60000E8C6FDFFFF6869D60000E8BCFDFFFF83C408E8A4FFFFFF84C0742F680401000068B02160006A00FF1508106000E829FFFFFF506888106000687810600068B0216000E8A4FDFFFF83C41033C0C210009090909090909090909090908B4C2408568B74240833D28BC6F7F18BC685D2740833D2F7F1400FAFC15EC3908B4424045355568B483C5703C833D28B79548B71388BC7F7F685D2740C8BC733D2F7F68BF8470FAFFE33C033DB668B41148D54081833C0"
	strings:
		$1 = { 68 69 D6 00 00 E8 C6 FD FF FF 68 69 D6 00 00 E8 BC FD FF FF 83 C4 08 E8 A4 FF FF FF 84 C0 74 2F 68 04 01 00 00 68 B0 21 60 00 6A 00 FF 15 08 10 60 00 E8 29 FF FF FF 50 68 88 10 60 00 68 78 10 60 00 68 B0 21 60 00 E8 A4 FD FF FF 83 C4 10 33 C0 C2 10 00 90 90 90 90 90 90 90 90 90 90 90 90 8B 4C 24 08 56 8B 74 24 08 33 D2 8B C6 F7 F1 8B C6 85 D2 74 08 33 D2 F7 F1 40 0F AF C1 5E C3 90 8B 44 24 04 53 55 56 8B 48 3C 57 03 C8 33 D2 8B 79 54 8B 71 38 8B C7 F7 F6 85 D2 74 0C 8B C7 33 D2 F7 F6 8B F8 47 0F AF FE 33 C0 33 DB 66 8B 41 14 8D 54 08 18 33 C0 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
)x86_pe_packer";
