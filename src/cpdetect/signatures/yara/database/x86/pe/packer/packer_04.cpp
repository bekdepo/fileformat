/**
 * @file src/cpdetect/signatures/yara/database/x86/pe/packer/packer_04.cpp
 * @brief Database of signatures.
 * @copyright (c) 2017 Avast Software, licensed under the MIT license
 */

const char *x86PePacker_04 =
R"x86_pe_packer(
rule rule_97__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a [PECompact 1.4x]"
		pattern = "EB06682EA80000C39C60E80200000033C08BC483C004938BE38B5BFC81EB3F904000619DEB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003E802000000295A83C4045874047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF"
	strings:
		$1 = { EB 06 68 2E A8 00 00 C3 9C 60 E8 02 00 00 00 33 C0 8B C4 83 C0 04 93 8B E3 8B 5B FC 81 EB 3F 90 40 00 61 9D EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 E8 02 00 00 00 29 5A 83 C4 04 58 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_98__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a [PELock NT 2.04]"
		pattern = "EB03CD20C71EEB03CD20EA9CEB02EB01EB01EB60EB03CD20EBEB01EBE803000000E9EB04584050C3EB03CD20EBEB03CD2003619D83C404EB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003E802000000295A83C4045874047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF"
	strings:
		$1 = { EB 03 CD 20 C7 1E EB 03 CD 20 EA 9C EB 02 EB 01 EB 01 EB 60 EB 03 CD 20 EB EB 01 EB E8 03 00 00 00 E9 EB 04 58 40 50 C3 EB 03 CD 20 EB EB 03 CD 20 03 61 9D 83 C4 04 EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 E8 02 00 00 00 29 5A 83 C4 04 58 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_99__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a [Petite 2.1]"
		pattern = "B8005040006A0068BB21400064FF350000000064892500000000669C605083C40461669D648F050000000083C408EB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003E802000000295A83C4045874047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF"
	strings:
		$1 = { B8 00 50 40 00 6A 00 68 BB 21 40 00 64 FF 35 00 00 00 00 64 89 25 00 00 00 00 66 9C 60 50 83 C4 04 61 66 9D 64 8F 05 00 00 00 00 83 C4 08 EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 E8 02 00 00 00 29 5A 83 C4 04 58 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_100__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a [PeX 0.99]"
		pattern = "60E801000000E883C404E801000000E95D81EDFF22400061EB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003E802000000295A83C4045874047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C4082B042474047502EB02EB01"
	strings:
		$1 = { 60 E8 01 00 00 00 E8 83 C4 04 E8 01 00 00 00 E9 5D 81 ED FF 22 40 00 61 EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 E8 02 00 00 00 29 5A 83 C4 04 58 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 2B 04 24 74 04 75 02 EB 02 EB 01 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_101__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a [SVKP 1.11]"
		pattern = "60E8000000005D81ED0600000064A02300000083C50661EB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003E802000000295A83C4045874047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C4082B042474047502EB02EB01"
	strings:
		$1 = { 60 E8 00 00 00 00 5D 81 ED 06 00 00 00 64 A0 23 00 00 00 83 C5 06 61 EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 E8 02 00 00 00 29 5A 83 C4 04 58 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 2B 04 24 74 04 75 02 EB 02 EB 01 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_102__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a [UPX 0.89.6 - 1.02 / 1.05 - 1.24]"
		pattern = "60BE00908B008DBE0080B4FF5783CDFFEB3A9090909090908A064688074701DB75078B1E83EEFC11DB72EDB80100000001DB75078B1E83EEFC11DB11C001DB730B75198B1E83EEFC11DB7210586190EB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003E802000000295A83C4045874047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF"
	strings:
		$1 = { 60 BE 00 90 8B 00 8D BE 00 80 B4 FF 57 83 CD FF EB 3A 90 90 90 90 90 90 8A 06 46 88 07 47 01 DB 75 07 8B 1E 83 EE FC 11 DB 72 ED B8 01 00 00 00 01 DB 75 07 8B 1E 83 EE FC 11 DB 11 C0 01 DB 73 0B 75 19 8B 1E 83 EE FC 11 DB 72 10 58 61 90 EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 E8 02 00 00 00 29 5A 83 C4 04 58 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_103__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a [WWPack32 1.x]"
		pattern = "53558BE833DBEB600D0A0D0A57575061636B3332206465636F6D7072657373696F6E20726F7574696E652076657273696F6E20312E31320D0A28632920313939382050696F747220576172657A616B20616E6420526166616C20576965727A6269636B690D0A0D0A5D5B90EB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003E802000000295A83C4045874047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF"
	strings:
		$1 = { 53 55 8B E8 33 DB EB 60 0D 0A 0D 0A 57 57 50 61 63 6B 33 32 20 64 65 63 6F 6D 70 72 65 73 73 69 6F 6E 20 72 6F 75 74 69 6E 65 20 76 65 72 73 69 6F 6E 20 31 2E 31 32 0D 0A 28 63 29 20 31 39 39 38 20 50 69 6F 74 72 20 57 61 72 65 7A 61 6B 20 61 6E 64 20 52 61 66 61 6C 20 57 69 65 72 7A 62 69 63 6B 69 0D 0A 0D 0A 5D 5B 90 EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 E8 02 00 00 00 29 5A 83 C4 04 58 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_104__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a [yoda's cryptor 1.2]"
		pattern = "60E8000000005D81EDF31D4000B97B0900008DBD3B1E40008BF7AC902C8AC0C078900462EB010061EB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003E802000000295A83C4045874047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF"
	strings:
		$1 = { 60 E8 00 00 00 00 5D 81 ED F3 1D 40 00 B9 7B 09 00 00 8D BD 3B 1E 40 00 8B F7 AC 90 2C 8A C0 C0 78 90 04 62 EB 01 00 61 EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 E8 02 00 00 00 29 5A 83 C4 04 58 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_105__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a"
		pattern = "E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018174047502EB02EB01810F31500F31E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C4082B042474047502EB02EB018183C404E80A000000E8"
	strings:
		$1 = { E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 74 04 75 02 EB 02 EB 01 81 0F 31 50 0F 31 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 2B 04 24 74 04 75 02 EB 02 EB 01 81 83 C4 04 E8 0A 00 00 00 E8 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_106__MSLRH {
	meta:
		tool = "P"
		name = "[MSLRH]"
		version = "0.32a"
		pattern = "EB05E8EB044000EBFAE80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB0181E80A000000E8EB0C0000E8F6FFFFFFE8F2FFFFFF83C40874047502EB02EB018150E802000000295A586BC003"
	strings:
		$1 = { EB 05 E8 EB 04 40 00 EB FA E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 E8 0A 00 00 00 E8 EB 0C 00 00 E8 F6 FF FF FF E8 F2 FF FF FF 83 C4 08 74 04 75 02 EB 02 EB 01 81 50 E8 02 00 00 00 29 5A 58 6B C0 03 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_107__BOX {
	meta:
		tool = "P"
		name = "_BOX_"
		pattern = "5868????????68????????68????00005068??????00C3909090909090909090"
	strings:
		$1 = { 58 68 ?? ?? ?? ?? 68 ?? ?? ?? ?? 68 ?? ?? 00 00 50 68 ?? ?? ?? 00 C3 90 90 90 90 90 90 90 90 90 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_108_Aase_Crypter {
	meta:
		tool = "P"
		name = "Aase Crypter"
		pattern = "558BEC83C4F053B8A03E0010E893DEFFFF68F8420010E879DFFFFF6800430010680C430010E842DFFFFF50E844DFFFFFA398660010833D986600100075136A006818430010681C4300106A00E84BDFFFFF682C430010680C43????????DFFFFF50E80EDFFFFFA394660010833D946600100075136A00681843001068384300106A00E815DFFFFF6848430010680C430010E8D6DEFFFF50E8D8DEFFFFA3A0660010833DA06600100075136A00681843001068584300106A00E8DFDEFFFF686C430010680C430010E8A0DEFFFF50E8A2DEFFFF"
	strings:
		$1 = { 55 8B EC 83 C4 F0 53 B8 A0 3E 00 10 E8 93 DE FF FF 68 F8 42 00 10 E8 79 DF FF FF 68 00 43 00 10 68 0C 43 00 10 E8 42 DF FF FF 50 E8 44 DF FF FF A3 98 66 00 10 83 3D 98 66 00 10 00 75 13 6A 00 68 18 43 00 10 68 1C 43 00 10 6A 00 E8 4B DF FF FF 68 2C 43 00 10 68 0C 43 ?? ?? ?? ?? DF FF FF 50 E8 0E DF FF FF A3 94 66 00 10 83 3D 94 66 00 10 00 75 13 6A 00 68 18 43 00 10 68 38 43 00 10 6A 00 E8 15 DF FF FF 68 48 43 00 10 68 0C 43 00 10 E8 D6 DE FF FF 50 E8 D8 DE FF FF A3 A0 66 00 10 83 3D A0 66 00 10 00 75 13 6A 00 68 18 43 00 10 68 58 43 00 10 6A 00 E8 DF DE FF FF 68 6C 43 00 10 68 0C 43 00 10 E8 A0 DE FF FF 50 E8 A2 DE FF FF }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_109_ABC_Cryptor {
	meta:
		tool = "P"
		name = "ABC Cryptor"
		version = "1.0"
		pattern = "68FF6424F0685858585890FFD4508B40F205B095F6950F850181BBFF68????????BF00??????B900??????8037??4739CF75F8????????????????????????????????????????????????????????????????????????????????????????????????????????????BF00??????B900??????8037??4739CF75F8"
	strings:
		$1 = { 68 FF 64 24 F0 68 58 58 58 58 90 FF D4 50 8B 40 F2 05 B0 95 F6 95 0F 85 01 81 BB FF 68 ?? ?? ?? ?? BF 00 ?? ?? ?? B9 00 ?? ?? ?? 80 37 ?? 47 39 CF 75 F8 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? BF 00 ?? ?? ?? B9 00 ?? ?? ?? 80 37 ?? 47 39 CF 75 F8 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_110_ACE_COMPRESSION {
	meta:
		tool = "P"
		name = "ACE COMPRESSION"
		pattern = "3?3?268AC060E8??000000????48FA????????6A773839336A7339326A6139736A733933615F3B28254C492C3A00EFBEADDE??????78??000000"
	strings:
		$1 = { 3? 3? 26 8A C0 60 E8 ?? 00 00 00 ?? ?? 48 FA ?? ?? ?? ?? 6A 77 38 39 33 6A 73 39 32 6A 61 39 73 6A 73 39 33 61 5F 3B 28 25 4C 49 2C 3A 00 EF BE AD DE ?? ?? ?? 78 ?? 00 00 00 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_111_ACE_COMPRESSION {
	meta:
		tool = "P"
		name = "ACE COMPRESSION"
		pattern = "3?3?268AC060E8??000000????48FA4D4554494E46????0000000000000000000000000000000000000000000000EFBEADDE??????78??000000"
	strings:
		$1 = { 3? 3? 26 8A C0 60 E8 ?? 00 00 00 ?? ?? 48 FA 4D 45 54 49 4E 46 ?? ?? 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 EF BE AD DE ?? ?? ?? 78 ?? 00 00 00 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_112_ACE_COMPRESSION {
	meta:
		tool = "P"
		name = "ACE COMPRESSION"
		pattern = "E9????????436F707972696768742062792041434520436F6D7072657373696F6E20536F6674776172652028313939382D3230303029"
	strings:
		$1 = { E9 ?? ?? ?? ?? 43 6F 70 79 72 69 67 68 74 20 62 79 20 41 43 45 20 43 6F 6D 70 72 65 73 73 69 6F 6E 20 53 6F 66 74 77 61 72 65 20 28 31 39 39 38 2D 32 30 30 30 29 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_113_AcidCrypt {
	meta:
		tool = "P"
		name = "AcidCrypt"
		pattern = "60B9??????00BA??????00BE??????000238404E75FA8BC28A1832DFC0CB"
	strings:
		$1 = { 60 B9 ?? ?? ?? 00 BA ?? ?? ?? 00 BE ?? ?? ?? 00 02 38 40 4E 75 FA 8B C2 8A 18 32 DF C0 CB }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_114_AcidCrypt {
	meta:
		tool = "P"
		name = "AcidCrypt"
		pattern = "BE????????0238404E75FA8BC28A1832DFC0CB"
	strings:
		$1 = { BE ?? ?? ?? ?? 02 38 40 4E 75 FA 8B C2 8A 18 32 DF C0 CB }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_115_ACProtect {
	meta:
		tool = "P"
		name = "ACProtect"
		version = "1.09"
		pattern = "60F950E8010000007C58584950E8010000007E5858790466B9B872E8010000007A83C40485C8EB01EBC1F8BE72037301740F8101000000F9EB0175F9E8010000"
	strings:
		$1 = { 60 F9 50 E8 01 00 00 00 7C 58 58 49 50 E8 01 00 00 00 7E 58 58 79 04 66 B9 B8 72 E8 01 00 00 00 7A 83 C4 04 85 C8 EB 01 EB C1 F8 BE 72 03 73 01 74 0F 81 01 00 00 00 F9 EB 01 75 F9 E8 01 00 00 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_116_ACProtect {
	meta:
		tool = "P"
		name = "ACProtect"
		version = "1.35"
		pattern = "4B45524E454C33322E444C4C00????????????????????????????????????????5553455233322E444C4C00??????????????????????????????????????????????????????????????????0047657450726F63416464726573730000004765744D6F64756C6548616E646C65410000004C6F61644C696272617279410000004578697450726F636573730000004D657373616765426F784100904D696E65496D706F72745F"
	strings:
		$1 = { 4B 45 52 4E 45 4C 33 32 2E 44 4C 4C 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 55 53 45 52 33 32 2E 44 4C 4C 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 47 65 74 50 72 6F 63 41 64 64 72 65 73 73 00 00 00 47 65 74 4D 6F 64 75 6C 65 48 61 6E 64 6C 65 41 00 00 00 4C 6F 61 64 4C 69 62 72 61 72 79 41 00 00 00 45 78 69 74 50 72 6F 63 65 73 73 00 00 00 4D 65 73 73 61 67 65 42 6F 78 41 00 90 4D 69 6E 65 49 6D 70 6F 72 74 5F }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_117_ACProtect {
	meta:
		tool = "P"
		name = "ACProtect"
		version = "1.35"
		pattern = "4B45524E454C33322E444C4C00????????????????????????????????????????5553455233322E444C4C00??????????????????????????????????????????????????????????????????0047657450726F63"
	strings:
		$1 = { 4B 45 52 4E 45 4C 33 32 2E 44 4C 4C 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 55 53 45 52 33 32 2E 44 4C 4C 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 47 65 74 50 72 6F 63 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_118_ACProtect {
	meta:
		tool = "P"
		name = "ACProtect"
		version = "1.3x"
		pattern = "6050E8010000007583"
	strings:
		$1 = { 60 50 E8 01 00 00 00 75 83 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_119_ACProtect {
	meta:
		tool = "P"
		name = "ACProtect"
		version = "1.41"
		pattern = "60760377017B74037501784787EEE8010000007683C40485EEEB017F85F2EB01790F8601000000FCEB0178790287F261518F051938010160EB01E9E901000000"
	strings:
		$1 = { 60 76 03 77 01 7B 74 03 75 01 78 47 87 EE E8 01 00 00 00 76 83 C4 04 85 EE EB 01 7F 85 F2 EB 01 79 0F 86 01 00 00 00 FC EB 01 78 79 02 87 F2 61 51 8F 05 19 38 01 01 60 EB 01 E9 E9 01 00 00 00 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
rule rule_120_ACProtect {
	meta:
		tool = "P"
		name = "ACProtect"
		version = "1.41"
		pattern = "E801000000??83"
	strings:
		$1 = { E8 01 00 00 00 ?? 83 }
	condition:
		for any of them : ( $ at pe.entry_point )
}
)x86_pe_packer";
